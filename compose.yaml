version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-network

  app:
    build: .
    container_name: spring_app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/URLShortener
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      db:
        condition: service_started
      traefik:
        condition: service_started
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.urlshortener.rule=Host(`localhost`)"
      - "traefik.http.routers.urlshortener.entrypoints=web"
      - "traefik.http.services.urlshortener.loadbalancer.server.port=8080"

  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_DB: URLShortener
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - traefik-network

volumes:
  postgres_data:

networks:
  traefik-network:
    driver: bridge